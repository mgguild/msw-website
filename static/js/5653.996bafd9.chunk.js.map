{"version":3,"file":"static/js/5653.996bafd9.chunk.js","mappings":"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","sources":["Components/Pages/AccountDelete/AccountDelete.tsx","Hooks/usePlayfab.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Modal from '@mui/material/Modal';\nimport Box from '@mui/material/Box';\nimport { Link } from 'react-router-dom';\nimport { PlayFabCloudScript } from 'playfab-sdk';\nimport usePlayfab from '../../../Hooks/usePlayfab';\nimport { toast } from 'react-toastify';\nimport { padding } from 'styled-system';\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n`;\n\nconst Menu = styled.div`\n    background-color: #4f19a7;\n    font-family: 'Alphakind', cursive;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    width: 100%;\n    height: 20rem;\n    gap: 1rem;\n\n    h1 {\n        font-size: 2rem;\n    }\n`;\n\nconst Buttons = styled.div`\n    display: flex;\n    gap: 2rem;\n\n    a {\n        color: white;\n        text-decoration: none;\n    }\n`;\n\nconst Button = styled.button<{ padding?: any; borderRadius?: any }>`\n    font-family: 'Alphakind', cursive;\n    font-size: 1.5rem;\n    display: flex;\n    background-color: #8252b9;\n    padding: ${({ padding }) => padding ?? '0.5rem 1rem'};\n    border-radius: ${({ borderRadius }) => borderRadius ?? '20px'};\n    align-items: center;\n    justify-content: center;\n    text-align: center;\n\n    &:hover {\n        background-color: #52307a;\n    }\n`;\n\nconst CenterFrame = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ModalContainer = styled.div`\n    background-color: #4f19a7;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content: center;\n    border: white solid 2px;\n    border-radius: 10px;\n    min-width: 15rem;\n    width: 35rem;\n    gap: 1.5rem;\n    margin: 1rem;\n\n    h4 {\n        font-family: 'Alphakind', cursive;\n        letter-spacing: 3px;\n        font-size: 1.5rem;\n        font-weight: 700;\n        padding: 2rem 0rem 0.5rem 0rem;\n    }\n`;\n\nconst ColForm = styled.form`\n    display: flex;\n    flex-flow: column;\n    width: 100%;\n    height: 100%;\n    gap: 1rem;\n    background-color: #190128;\n    padding: 2rem 1rem;\n    border-radius: 0 0 10px 10px;\n    justify-content: start;\n    text-align: start;\n`;\n\nconst Col = styled.div`\n    display: flex;\n    align-items: center;\n    flex-flow: column;\n    gap: 0.5rem;\n    width: 100%;\n\n    p {\n        font-family: 'Alphakind', cursive;\n        font-size: 1.3rem;\n    }\n\n    input {\n        border-radius: 5px;\n    }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    align-items: center;\n    flex-flow: row nowrap;\n    justify-content: center;\n    gap: 0.5rem;\n    width: 100%;\n\n    p {\n        font-family: 'Alphakind', cursive;\n        font-size: 1.3rem;\n    }\n\n    input {\n        border-radius: 5px;\n    }\n`;\n\nconst Input = styled.input`\n    font-family: 'Alphakind', cursive;\n    display: block;\n    width: 100%;\n    border-radius: 12px;\n    border: none;\n    height: 68px;\n    padding: 15px;\n    background: #242d3b;\n    color: #fff;\n    display: flex;\n    align-items: center;\n`;\n\nconst style = {\n    position: 'relative',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)',\n};\n\nconst App: React.FC = () => {\n    const [open, setOpen] = useState(false);\n    const [open2, setOpen2] = useState(false);\n    const [open3, setOpen3] = useState(false);\n    const [confirmDelete, setConfirmDelete] = useState<string | null>(null);\n    const [_userData, _setUserData] = useState<null | any>('');\n    const [deleting, setDeleting] = useState(false);\n\n    const setUserInfo = usePlayfab((state: any) => state.setUserInfo);\n    const setUserData = usePlayfab((state: any) => state.setUserData);\n    const user = usePlayfab((state: any) => state.user);\n    const userData = usePlayfab((state: any) => state.userData);\n\n    useEffect(() => {\n        _setUserData(userData);\n        if (user === '' || !user) {\n            setOpen2(true);\n        }\n    }, [userData]);\n\n    const handleConfirmDelete = (e: any) => {\n        e.preventDefault();\n\n        if (confirmDelete?.toUpperCase() != 'delete'.toUpperCase()) {\n            toast('you must type thw word \"delete\", check for typos', { type: 'error' });\n        } else {\n            setDeleting(true);\n\n            PlayFabCloudScript.ExecuteFunction(\n                {\n                    FunctionName: 'DeleteMasterPlayer',\n                    FunctionParameter: {\n                        currentPlayerId: user.PlayFabId,\n                        walletAddress: _userData['WalletAddress']?.Value ?? '',\n                    },\n                },\n                (error, result) => {\n                    setDeleting(false);\n                    if (error) {\n                        toast(error.errorMessage, { type: 'error' });\n                        return;\n                    }\n\n                    if (result.data.FunctionResult) {\n                        Logout();\n                        toast('User deletion success!', { type: 'success' });\n                    }\n                },\n            );\n        }\n    };\n\n    const Logout = () => {\n        setUserInfo('');\n        setOpen3(true);\n    };\n\n    return (\n        <>\n            <Modal\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <Box sx={style}>\n                    <CenterFrame>\n                        <ModalContainer>\n                            <h4>Confirm Delete</h4>\n                            <ColForm onSubmit={e => handleConfirmDelete(e)}>\n                                <Col>\n                                    <p>Type the word \"delete\" to confirm</p>\n                                    <Input\n                                        required\n                                        onChange={e => {\n                                            setConfirmDelete(e.target.value);\n                                        }}\n                                    />\n                                </Col>\n                                <Row>\n                                    {deleting ? (\n                                        <>\n                                            <p>Deleting account...</p>\n                                        </>\n                                    ) : (\n                                        <>\n                                            <Button\n                                                borderRadius=\"8px\"\n                                                padding=\"0.8rem 1rem\"\n                                                type=\"submit\"\n                                            >\n                                                Confirm\n                                            </Button>\n                                            <Button\n                                                borderRadius=\"8px\"\n                                                padding=\"0.8rem 1rem\"\n                                                onClick={() => setOpen(false)}\n                                            >\n                                                Cancel\n                                            </Button>\n                                        </>\n                                    )}\n                                </Row>\n                            </ColForm>\n                        </ModalContainer>\n                    </CenterFrame>\n                </Box>\n            </Modal>\n            <Modal\n                open={open2}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <CenterFrame>\n                    <ModalContainer>\n                        <Row style={{ padding: '1rem 2rem' }}>\n                            <h4 style={{ textAlign: 'center' }}>\n                                User Not found! Please return to{' '}\n                                <Link to={'/'}>homepage</Link> to login\n                            </h4>\n                        </Row>\n                    </ModalContainer>\n                </CenterFrame>\n            </Modal>\n            <Modal\n                open={open3}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <CenterFrame>\n                    <ModalContainer>\n                        <Row style={{ padding: '1rem 2rem' }}>\n                            <h4 style={{ textAlign: 'center' }}>\n                                User account deleted go back to{' '}\n                                <Link to={'/'}>homepage</Link>\n                            </h4>\n                        </Row>\n                    </ModalContainer>\n                </CenterFrame>\n            </Modal>\n            <Container>\n                <Menu>\n                    <h1>\n                        Are you sure you want to{' '}\n                        <span style={{ color: 'red' }}>DELETE</span> [\n                        <span style={{ color: '#ffef00' }}>{user.Username}</span>]\n                    </h1>\n                    <Buttons>\n                        <Button padding={'1rem 2.4rem'} onClick={() => setOpen(true)}>\n                            YES\n                        </Button>\n                        <Link to={'/'}>\n                            <Button padding={'1rem 2.5rem'}>NO</Button>\n                        </Link>\n                    </Buttons>\n                </Menu>\n            </Container>\n        </>\n    );\n};\n\nexport default App;\n","import { PlayFab, PlayFabClient } from 'playfab-sdk';\nimport { create } from 'zustand';\nimport { toast } from 'react-toastify';\n\nconst usePlayfab = create(set => ({\n  initialized: false,\n  user: '',\n  userTags: [],\n  userData: '',\n  start: async () => {\n    PlayFab.settings.titleId = process.env.REACT_APP_PLAYFAB_TITLE_ID ?? '';\n    PlayFab.settings.developerSecretKey = process.env.REACT_APP_PLAYFAB_DEV_KEY ?? '';\n\n    PlayFabClient.LoginWithCustomID(\n      {\n        CustomId: 'MSWAnonymousGuest',\n        CreateAccount: true,\n        CustomTags: { AccType: 'AnonymousGuest' },\n      },\n      (error, result) => {\n        if (error) {\n          toast(error.errorMessage, { type: 'error' });\n          set({ initialized: false });\n          return;\n        }\n      },\n    );\n\n    set({ initialized: true });\n  },\n  getTitleData: async () => {\n    const test = await PlayFabClient.GetTitleData(\n      { Keys: ['IsOngoingEvent'] },\n      (error, result) => {\n        if (error) {\n          toast(error.errorMessage, { type: 'error' });\n          set({ request: 0 });\n          return;\n        }\n      },\n    );\n  },\n  setUserInfo: (userInfo: any) => {\n    set({ user: userInfo });\n  },\n  setUserTags: (tags: string[]) => {\n    set({ userTags: tags });\n  },\n  setUserData: (data: any) => {\n    set({ userData: data });\n  },\n}));\n\nexport default usePlayfab;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Menu","_templateObject2","Buttons","_templateObject3","Button","button","_templateObject4","_ref","padding","_ref2","borderRadius","CenterFrame","_templateObject5","ModalContainer","_templateObject6","ColForm","form","_templateObject7","Col","_templateObject8","Row","_templateObject9","Input","input","_templateObject10","style","position","top","left","transform","App","open","setOpen","useState","open2","setOpen2","open3","setOpen3","confirmDelete","setConfirmDelete","_userData","_setUserData","deleting","setDeleting","setUserInfo","usePlayfab","state","user","setUserData","userData","useEffect","Logout","_jsxs","_Fragment","children","_jsx","Modal","onClose","Box","sx","onSubmit","e","_userData$WalletAddre","_userData$WalletAddre2","preventDefault","toUpperCase","toast","type","PlayFabCloudScript","ExecuteFunction","FunctionName","FunctionParameter","currentPlayerId","PlayFabId","walletAddress","Value","error","result","errorMessage","data","FunctionResult","handleConfirmDelete","required","onChange","target","value","onClick","textAlign","Link","to","color","Username","create","set","initialized","userTags","start","async","_process$env$REACT_AP","_process$env$REACT_AP2","PlayFab","settings","titleId","process","developerSecretKey","PlayFabClient","LoginWithCustomID","CustomId","CreateAccount","CustomTags","AccType","getTitleData","GetTitleData","Keys","request","userInfo","setUserTags","tags"],"sourceRoot":""}
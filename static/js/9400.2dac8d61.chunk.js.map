{"version":3,"file":"static/js/9400.2dac8d61.chunk.js","mappings":"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","sources":["Components/Pages/NotSameWallet/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router-dom';\nimport Modal from '@mui/material/Modal';\nimport { Link } from 'react-router-dom';\nimport usePlayfab from '../../../Hooks/usePlayfab';\nimport { useConnectionStatus, useAddress } from '@thirdweb-dev/react';\nimport { ConnectWallet } from '@thirdweb-dev/react';\n\nconst Container = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n`;\n\nconst Menu = styled.div`\n    background-color: #4f19a7;\n    font-family: 'Alphakind', cursive;\n    display: flex;\n    flex-flow: column nowrap;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    width: 100%;\n    padding: 1rem;\n    gap: 1rem;\n\n    h1 {\n        font-size: 2rem;\n    }\n`;\n\nconst CenterFrame = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst ModalContainer = styled.div`\n    background-color: #4f19a7;\n    display: flex;\n    flex-flow: column nowrap;\n    align-items: center;\n    justify-content: center;\n    border: white solid 2px;\n    border-radius: 10px;\n    min-width: 15rem;\n    width: 35rem;\n    gap: 1.5rem;\n    margin: 1rem;\n\n    h4 {\n        font-family: 'Alphakind', cursive;\n        letter-spacing: 3px;\n        font-size: 1.5rem;\n        font-weight: 700;\n        padding: 2rem 0rem 0.5rem 0rem;\n    }\n`;\n\nconst Row = styled.div`\n    display: flex;\n    align-items: center;\n    flex-flow: row nowrap;\n    justify-content: center;\n    gap: 0.5rem;\n    width: 100%;\n\n    p {\n        font-family: 'Alphakind', cursive;\n        font-size: 1.3rem;\n    }\n\n    input {\n        border-radius: 5px;\n    }\n`;\n\nconst WalletInfo = styled.div`\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    align-items: center;\n    line-height: 0.1rem;\n\n    span {\n        font-family: Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace !important;\n        font-size: 1.5rem;\n    }\n`\n\nconst App: React.FC = () => {\n    const navigate = useNavigate();\n\n    const [open, setOpen] = useState(false);\n    const [_userData, _setUserData] = useState<null | any>('');\n\n    const user = usePlayfab((state: any) => state.user);\n    const userData = usePlayfab((state: any) => state.userData);\n\n    const _address = useAddress();\n    const _status = useConnectionStatus();\n\n    useEffect(() => {\n        _setUserData(userData);\n\n        if (user === '' || !user || _status !== 'connected') {\n            setOpen(true);\n        }\n\n        if (_status === 'connected' && _userData && `${_userData['WalletAddress'].Value}`.toUpperCase() === `${_address}`.toUpperCase()) {\n            navigate(-1);\n        }\n    }, [user, userData, _userData, _address]);\n\n    return (\n        <>\n            <Modal\n                open={open}\n                onClose={() => setOpen(false)}\n                aria-labelledby=\"modal-modal-title\"\n                aria-describedby=\"modal-modal-description\"\n            >\n                <CenterFrame>\n                    <ModalContainer>\n                        <Row style={{ padding: '1rem 2rem' }}>\n                            <h4 style={{ textAlign: 'center' }}>\n                                {user && <p>User Not found! Please return to </p>}\n                                {_status === 'connected' && (\n                                    <p>Connect wallet or return to </p>\n                                )}\n                                <Link to={'/'}>homepage</Link> to login\n                            </h4>\n                        </Row>\n                    </ModalContainer>\n                </CenterFrame>\n            </Modal>\n\n            {user && _userData['WalletAddress'] && (\n                <Container>\n                    <Menu>\n                        <h1>Connected wallet address must be same as bound wallet</h1>\n                        <h1>User must switch to bound wallet address</h1>\n                        <br />\n                        <br />\n                        <WalletInfo>\n                            <h1>User Bound Wallet:</h1>\n                            <span>\n                                [\n                                <span style={{ color: '#ffef00' }}>\n                                    {`${_userData['WalletAddress'].Value}`.toUpperCase()}\n                                </span>\n                                ]\n                            </span>\n                        </WalletInfo>\n                        <br />\n                        <WalletInfo>\n                            <h1>Wallet Connected:</h1>\n                            <span>\n                                [\n                                <span style={{ color: '#ff4d00' }}>\n                                    {`${_address}`.toUpperCase()}\n                                </span>\n                                ]\n                            </span>\n                        </WalletInfo>\n                        <ConnectWallet />\n                    </Menu>\n                </Container>\n            )}\n        </>\n    );\n};\n\nexport default App;\n"],"names":["Container","styled","div","_templateObject","_taggedTemplateLiteral","Menu","_templateObject2","CenterFrame","_templateObject3","ModalContainer","_templateObject4","Row","_templateObject5","WalletInfo","_templateObject6","App","navigate","useNavigate","open","setOpen","useState","_userData","_setUserData","user","usePlayfab","state","userData","_address","useAddress","_status","useConnectionStatus","useEffect","concat","Value","toUpperCase","_jsxs","_Fragment","children","_jsx","Modal","onClose","style","padding","textAlign","Link","to","color","ConnectWallet"],"sourceRoot":""}
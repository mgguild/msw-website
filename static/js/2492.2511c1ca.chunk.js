"use strict";(self.webpackChunkMetaSaga_Warriors=self.webpackChunkMetaSaga_Warriors||[]).push([[2492],{29368:(t,r,e)=>{e.d(r,{S:()=>o});var a=e(94572),n=e(51416),s=e(82640);class o{get chainId(){return this._chainId}constructor(t,r,e){(0,a.c)(this,"transfer",(0,n.d)((()=>{var t=this;return async function(r,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return t.erc1155.transfer.prepare(r,e,a,n)}})())),(0,a.c)(this,"transferBatch",(0,n.d)((()=>{var t=this;return async function(r,e,a,n){let s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:[0];return t.erc1155.transferBatch.prepare(r,e,a,n,s)}})())),(0,a.c)(this,"setApprovalForAll",(0,n.d)((async(t,r)=>this.erc1155.setApprovalForAll.prepare(t,r)))),(0,a.c)(this,"airdrop",(0,n.d)((()=>{var t=this;return async function(r,e,a){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0];return t.erc1155.airdrop.prepare(r,e,a,n)}})())),this.contractWrapper=t,this.storage=r,this.erc1155=new s.E(this.contractWrapper,this.storage,e),this._chainId=e}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async get(t){return this.erc1155.get(t)}async totalSupply(t){return this.erc1155.totalSupply(t)}async balanceOf(t,r){return this.erc1155.balanceOf(t,r)}async balance(t){return this.erc1155.balance(t)}async isApproved(t,r){return this.erc1155.isApproved(t,r)}}},82984:(t,r,e)=>{e.d(r,{h:()=>n});var a=e(21204);async function n(t,r,n){const s=t.getProvider(),o=(await Promise.resolve().then(e.t.bind(e,2056,19))).default,c=new a.cq(s,r,o,{},t.storage),i=await t.getSignerAddress(),d=t.address;return(await c.read("allowance",[i,d])).gte(n)}},21648:(t,r,e)=>{e.d(r,{a:()=>l,g:()=>w,h:()=>p,i:()=>d,m:()=>h,v:()=>u});var a=e(60852),n=e(3628),s=e(86412),o=e(87184),c=e(21204),i=e(89032);async function d(t,r,n,s,c){try{const p=(await e.e(1664).then(e.t.bind(e,91664,19))).default,u=new a.wn(n,p,t),[h,l]=await Promise.all([u.supportsInterface(o.I),u.supportsInterface(o.a)]);if(h){var i;const o=(await Promise.resolve().then(e.t.bind(e,39158,19))).default,p=new a.wn(n,o,t);if(await p.isApprovedForAll(c,r))return!0;let u;try{u=await p.getApproved(s)}catch(d){}return(null===(i=u)||void 0===i?void 0:i.toLowerCase())===r.toLowerCase()}if(l){const s=(await Promise.resolve().then(e.t.bind(e,82955,19))).default,o=new a.wn(n,s,t);return await o.isApprovedForAll(c,r)}return console.error("Contract does not implement ERC 1155 or ERC 721."),!1}catch(p){return console.error("Failed to check if token is approved",p),!1}}async function p(t,r,a,n,s){const i=(await e.e(1664).then(e.t.bind(e,91664,19))).default,d=new c.cq(t.getSignerOrProvider(),a,i,t.options,t.storage),[p,u]=await Promise.all([d.read("supportsInterface",[o.I]),d.read("supportsInterface",[o.a])]);if(p){const o=(await Promise.resolve().then(e.t.bind(e,39158,19))).default,i=new c.cq(t.getSignerOrProvider(),a,o,t.options,t.storage);if(!await i.read("isApprovedForAll",[s,r])){(await i.read("getApproved",[n])).toLowerCase()===r.toLowerCase()||await i.sendTransaction("setApprovalForAll",[r,!0])}}else{if(!u)throw Error("Contract must implement ERC 1155 or ERC 721.");{const n=(await Promise.resolve().then(e.t.bind(e,82955,19))).default,o=new c.cq(t.getSignerOrProvider(),a,n,t.options,t.storage);await o.read("isApprovedForAll",[s,r])||await o.sendTransaction("setApprovalForAll",[r,!0])}}}function u(t){if((0,s.c)(void 0!==t.assetContractAddress&&null!==t.assetContractAddress,"Asset contract address is required"),(0,s.c)(void 0!==t.buyoutPricePerToken&&null!==t.buyoutPricePerToken,"Buyout price is required"),(0,s.c)(void 0!==t.listingDurationInSeconds&&null!==t.listingDurationInSeconds,"Listing duration is required"),(0,s.c)(void 0!==t.startTimestamp&&null!==t.startTimestamp,"Start time is required"),(0,s.c)(void 0!==t.tokenId&&null!==t.tokenId,"Token ID is required"),(0,s.c)(void 0!==t.quantity&&null!==t.quantity,"Quantity is required"),"NewAuctionListing"===t.type)(0,s.c)(void 0!==t.reservePricePerToken&&null!==t.reservePricePerToken,"Reserve price is required")}async function h(t,r,e){return{quantity:e.quantityDesired,pricePerToken:e.pricePerToken,currencyContractAddress:e.currency,buyerAddress:e.offeror,quantityDesired:e.quantityWanted,currencyValue:await(0,i.a)(t,e.currency,e.quantityWanted.mul(e.pricePerToken)),listingId:r}}function l(t,r,e){if(e=n.iC.from(e),t=n.iC.from(t),r=n.iC.from(r),t.eq(n.iC.from(0)))return!1;return r.sub(t).mul(c.dz).div(t).gte(e)}async function w(t,r,e){const a=[];for(;r-t>o.D;)a.push(e(t,t+o.D-1)),t+=o.D;return a.push(e(t,r-1)),await Promise.all(a)}},62492:(t,r,e)=>{e.r(r),e.d(r,{Pack:()=>N});var a=e(94572),n=e(3628),s=e(21088),o=e(15076),c=e(89032),i=e(82984),d=e(81639),p=e(21204),u=e(81512),h=e(84752),l=e(21648),w=e(87184),g=e(51416),f=e(58600),v=e(96096),k=e(19688),m=e(29368),y=e(24370),A=e(83284),P=e(31673),C=e(89832);const W=(()=>C.z.object({contractAddress:p.b9}))(),R=(()=>W.extend({quantity:p.cv}))(),I=(()=>W.extend({tokenId:p.b6}))(),b=(()=>W.extend({tokenId:p.b6,quantity:p.b6}))(),q=(()=>R.omit({quantity:!0}).extend({quantityPerReward:p.cv}))(),S=I,T=(()=>b.omit({quantity:!0}).extend({quantityPerReward:p.b6}))(),L=(()=>q.extend({totalRewards:p.b6.default("1")}))(),E=S,O=(()=>T.extend({totalRewards:p.b6.default("1")}))(),U=(()=>C.z.object({erc20Rewards:C.z.array(L).default([]),erc721Rewards:C.z.array(E).default([]),erc1155Rewards:C.z.array(O).default([])}))(),F=(()=>U.extend({packMetadata:P.N,rewardsPerPack:p.b6.default("1"),openStartTime:u.R.default(new Date)}))();e(89112),e(50820),e(83440),e(49992);class D{constructor(t,r,e,s,o){(0,a.c)(this,"featureName",p.dE.name),(0,a.c)(this,"open",(0,g.d)((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:a},parse:r=>{let e=n.iC.from(0);try{e=t.contractWrapper.parseLogs("PackOpenRequested",null===r||void 0===r?void 0:r.logs)[0].args.requestId}catch(a){}return{receipt:r,id:e}}})}})())),(0,a.c)(this,"claimRewards",(0,g.d)((()=>{var t=this;return async function(){let r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:5e5;return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"claimRewards",args:[],overrides:{gasLimit:r},parse:async r=>{const e=t.contractWrapper.parseLogs("PackOpened",null===r||void 0===r?void 0:r.logs);if(0===e.length)throw new Error("PackOpened event not found");const a=e[0].args.rewardUnitsDistributed;return await t.parseRewards(a)}})}})()));let c=arguments.length>5&&void 0!==arguments[5]?arguments[5]:new p.cq(t,r,y,s,e);this.contractWrapper=c,this.storage=e,this.chainId=o,this.events=new h.a(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async parseRewards(t){const r=[],e=[],a=[];for(const n of t)switch(n.tokenType){case 0:{const t=await(0,c.f)(this.contractWrapper.getProvider(),n.assetContract);r.push({contractAddress:n.assetContract,quantityPerReward:s.formatUnits(n.totalAmount,t.decimals).toString()});break}case 1:e.push({contractAddress:n.assetContract,tokenId:n.tokenId.toString()});break;case 2:a.push({contractAddress:n.assetContract,tokenId:n.tokenId.toString(),quantityPerReward:n.totalAmount.toString()})}return{erc20Rewards:r,erc721Rewards:e,erc1155Rewards:a}}async addPackOpenEventListener(t){return this.events.addEventListener("PackOpened",(async r=>{t(r.data.packId.toString(),r.data.opener,await this.parseRewards(r.data.rewardUnitsDistributed))}))}async canClaimRewards(t){const r=await(0,p.aL)(t||await this.contractWrapper.getSignerAddress());return await this.contractWrapper.read("canClaimRewards",[r])}async openAndClaim(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;const a=await this.contractWrapper.sendTransaction("openPackAndClaimRewards",[t,r,e],{gasLimit:n.iC.from(5e5)});let s=n.iC.from(0);try{s=this.contractWrapper.parseLogs("PackOpenRequested",null===a||void 0===a?void 0:a.logs)[0].args.requestId}catch(o){}return{receipt:a,id:s}}async getLinkBalance(){const t=(await Promise.resolve().then(e.t.bind(e,2056,19))).default;return this.getLinkContract(t).balanceOf(this.contractWrapper.address)}async transferLink(t){const r=(await Promise.resolve().then(e.t.bind(e,2056,19))).default;await this.getLinkContract(r).transfer(this.contractWrapper.address,t)}getLinkContract(t){const r=p.aY[this.chainId];if(!r)throw new Error("No LINK token address found for chainId ".concat(this.chainId));const e=new p.cq(this.contractWrapper.getSignerOrProvider(),r,t,this.contractWrapper.options,this.storage);return new A.E(e,this.storage,this.chainId)}}class N extends m.S{get vrf(){return(0,u.a)(this._vrf,p.dE)}constructor(t,r,e){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{},o=arguments.length>4?arguments[4]:void 0,i=arguments.length>5?arguments[5]:void 0;super(arguments.length>6&&void 0!==arguments[6]?arguments[6]:new p.cq(t,r,o,n.gasless&&"openzeppelin"in n.gasless?{...n,gasless:{...n.gasless,openzeppelin:{...n.gasless.openzeppelin,useEOAForwarder:!0}}}:n,e),e,i),(0,a.c)(this,"create",(0,g.d)((async t=>{const r=await this.contractWrapper.getSignerAddress();return this.createTo.prepare(r,t)}))),(0,a.c)(this,"addPackContents",(0,g.d)((async(t,r)=>{const[e,a]=await Promise.all([this.contractWrapper.getSignerAddress(),U.parseAsync(r)]),{contents:n,numOfRewardUnits:s}=await this.toPackContentArgs(a);return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"addPackContents",args:[t,n,s,e],parse:t=>{const r=this.contractWrapper.parseLogs("PackUpdated",null===t||void 0===t?void 0:t.logs);if(0===r.length)throw new Error("PackUpdated event not found");const e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})}))),(0,a.c)(this,"createTo",(0,g.d)((async(t,r)=>{const[e,a,n]=await Promise.all([(0,w.b)(r.packMetadata,this.storage),F.parseAsync(r),(0,p.aL)(t)]),{erc20Rewards:s,erc721Rewards:o,erc1155Rewards:c}=a,i={erc20Rewards:s,erc721Rewards:o,erc1155Rewards:c},{contents:d,numOfRewardUnits:u}=await this.toPackContentArgs(i);return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:"createPack",args:[d,u,e,a.openStartTime,a.rewardsPerPack,n],parse:t=>{const r=this.contractWrapper.parseLogs("PackCreated",null===t||void 0===t?void 0:t.logs);if(0===r.length)throw new Error("PackCreated event not found");const e=r[0].args.packId;return{id:e,receipt:t,data:()=>this.erc1155.get(e)}}})}))),(0,a.c)(this,"open",(0,g.d)((()=>{var t=this;return async function(r){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1,a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:5e5;if(t._vrf)throw new Error("This contract is using Chainlink VRF, use `contract.vrf.open()` or `contract.vrf.openAndClaim()` instead");return g.T.fromContractWrapper({contractWrapper:t.contractWrapper,method:"openPack",args:[r,e],overrides:{gasLimit:a},parse:async r=>{const e=t.contractWrapper.parseLogs("PackOpened",null===r||void 0===r?void 0:r.logs);if(0===e.length)throw new Error("PackOpened event not found");const a=e[0].args.rewardUnitsDistributed,n=[],o=[],i=[];for(const d of a)switch(d.tokenType){case 0:{const r=await(0,c.f)(t.contractWrapper.getProvider(),d.assetContract);n.push({contractAddress:d.assetContract,quantityPerReward:s.formatUnits(d.totalAmount,r.decimals).toString()});break}case 1:o.push({contractAddress:d.assetContract,tokenId:d.tokenId.toString()});break;case 2:i.push({contractAddress:d.assetContract,tokenId:d.tokenId.toString(),quantityPerReward:d.totalAmount.toString()})}return{erc20Rewards:n,erc721Rewards:o,erc1155Rewards:i}}})}})())),this.abi=p.bj.parse(o||[]),this.metadata=new h.C(this.contractWrapper,p.c1,this.storage),this.app=new h.b(this.contractWrapper,this.metadata,this.storage),this.roles=new k.C(this.contractWrapper,N.contractRoles),this.royalties=new v.C(this.contractWrapper,this.metadata),this.encoder=new c.C(this.contractWrapper),this.estimator=new h.G(this.contractWrapper),this.events=new h.a(this.contractWrapper),this.interceptor=new f.C(this.contractWrapper),this.owner=new v.a(this.contractWrapper),this._vrf=this.detectVrf()}onNetworkUpdated(t){var r;this.contractWrapper.updateSignerOrProvider(t),null===(r=this._vrf)||void 0===r||r.onNetworkUpdated(t)}getAddress(){return this.contractWrapper.address}async get(t){return this.erc1155.get(t)}async getAll(t){return this.erc1155.getAll(t)}async getOwned(t){return this.erc1155.getOwned(t)}async getTotalCount(){return this.erc1155.totalCount()}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[(0,p.H)("transfer"),o.e])}async getPackContents(t){const{contents:r,perUnitAmounts:e}=await this.contractWrapper.read("getPackContents",[t]),a=[],o=[],i=[];for(let d=0;d<r.length;d++){const t=r[d],p=e[d];switch(t.tokenType){case 0:{const r=await(0,c.f)(this.contractWrapper.getProvider(),t.assetContract),e=s.formatUnits(p,r.decimals),o=s.formatUnits(n.iC.from(t.totalAmount).div(p),r.decimals);a.push({contractAddress:t.assetContract,quantityPerReward:e,totalRewards:o});break}case 1:o.push({contractAddress:t.assetContract,tokenId:t.tokenId.toString()});break;case 2:i.push({contractAddress:t.assetContract,tokenId:t.tokenId.toString(),quantityPerReward:p.toString(),totalRewards:n.iC.from(t.totalAmount).div(p).toString()})}}return{erc20Rewards:a,erc721Rewards:o,erc1155Rewards:i}}async toPackContentArgs(t){const r=[],e=[],{erc20Rewards:a,erc721Rewards:s,erc1155Rewards:o}=t,c=this.contractWrapper.getProvider(),p=await this.contractWrapper.getSignerAddress();for(const n of a){const t=(await(0,d.n)(c,n.quantityPerReward,n.contractAddress)).mul(n.totalRewards);if(!await(0,i.h)(this.contractWrapper,n.contractAddress,t))throw new Error('ERC20 token with contract address "'.concat(n.contractAddress,'" does not have enough allowance to transfer.\n\nYou can set allowance to the multiwrap contract to transfer these tokens by running:\n\nawait sdk.getToken("').concat(n.contractAddress,'").setAllowance("').concat(this.getAddress(),'", ').concat(t,");\n\n"));e.push(n.totalRewards),r.push({assetContract:n.contractAddress,tokenType:0,totalAmount:t,tokenId:0})}for(const n of s){if(!await(0,l.i)(this.contractWrapper.getProvider(),this.getAddress(),n.contractAddress,n.tokenId,p))throw new Error('ERC721 token "'.concat(n.tokenId,'" with contract address "').concat(n.contractAddress,'" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getNFTCollection("').concat(n.contractAddress,'").setApprovalForToken("').concat(this.getAddress(),'", ').concat(n.tokenId,");\n\n"));e.push("1"),r.push({assetContract:n.contractAddress,tokenType:1,totalAmount:1,tokenId:n.tokenId})}for(const i of o){if(!await(0,l.i)(this.contractWrapper.getProvider(),this.getAddress(),i.contractAddress,i.tokenId,p))throw new Error('ERC1155 token "'.concat(i.tokenId,'" with contract address "').concat(i.contractAddress,'" is not approved for transfer.\n\nYou can give approval the multiwrap contract to transfer this token by running:\n\nawait sdk.getEdition("').concat(i.contractAddress,'").setApprovalForAll("').concat(this.getAddress(),'", true);\n\n'));e.push(i.totalRewards),r.push({assetContract:i.contractAddress,tokenType:2,totalAmount:n.iC.from(i.quantityPerReward).mul(n.iC.from(i.totalRewards)),tokenId:i.tokenId})}return{contents:r,numOfRewardUnits:e}}async prepare(t,r,e){return g.T.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:e})}async call(t,r,e){return this.contractWrapper.call(t,r,e)}detectVrf(){if((0,h.d)(this.contractWrapper,"PackVRF"))return new D(this.contractWrapper.getSignerOrProvider(),this.contractWrapper.address,this.storage,this.contractWrapper.options,this.chainId)}}(0,a.c)(N,"contractRoles",p.dF)}}]);
//# sourceMappingURL=2492.2511c1ca.chunk.js.map
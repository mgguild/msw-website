{"version":3,"file":"static/js/5768.9ccd6acd.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/magic/dist/thirdweb-dev-wallets-evm-connectors-magic.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport { ethers, utils } from 'ethers';\nimport { OAuthExtension } from '@magic-ext/oauth';\nimport { Magic } from 'magic-sdk';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nconst IS_SERVER = \"object\" === \"undefined\";\nclass MagicBaseConnector extends WagmiConnector {\n  constructor(config) {\n    super(config);\n    _defineProperty(this, \"id\", \"magic-link\");\n    _defineProperty(this, \"name\", \"Magic Link\");\n    _defineProperty(this, \"ready\", !IS_SERVER);\n    this.magicOptions = config.options;\n  }\n  async getAccount() {\n    const provider = new ethers.providers.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n    ;\n    const signer = provider.getSigner();\n    const account = await signer.getAddress();\n    if (account.startsWith(\"0x\")) {\n      return account;\n    }\n    return `0x${account}`;\n  }\n  async getProvider() {\n    if (this.provider) {\n      return this.provider;\n    }\n    const magic = this.getMagicSDK();\n    this.provider = magic.rpcProvider;\n    return this.provider;\n  }\n  async getSigner() {\n    const provider = new ethers.providers.Web3Provider(await this.getProvider()) // TODO: fix type mismatch\n    ;\n    const signer = await provider.getSigner();\n    return signer;\n  }\n  async isAuthorized() {\n    const magic = this.getMagicSDK();\n    try {\n      return await magic.user.isLoggedIn();\n    } catch (e) {\n      return false;\n    }\n  }\n  onAccountsChanged(accounts) {\n    if (accounts.length === 0) {\n      this.emit(\"disconnect\");\n    } else {\n      if (accounts[0]) {\n        this.emit(\"change\", {\n          account: utils.getAddress(accounts[0])\n        });\n      }\n    }\n  }\n  onChainChanged(chainId) {\n    const id = normalizeChainId(chainId);\n    const unsupported = this.isChainUnsupported(id);\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      }\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async disconnect() {\n    const magic = this.getMagicSDK();\n    await magic.user.logout();\n  }\n}\nvar _connectedChainId = /*#__PURE__*/new WeakMap();\nvar _type = /*#__PURE__*/new WeakMap();\nclass MagicAuthConnector extends MagicBaseConnector {\n  constructor(config) {\n    super(config);\n    _classPrivateFieldInitSpec(this, _connectedChainId, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _type, {\n      writable: true,\n      value: void 0\n    });\n    this.magicSdkConfiguration = config.options.magicSdkConfiguration;\n    _classPrivateFieldSet(this, _type, config.options.type);\n    this.oauthProviders = config.options.oauthOptions?.providers || [];\n    this.oauthRedirectURI = config.options.oauthOptions?.redirectURI;\n  }\n  async connect(options) {\n    if (!this.magicOptions.apiKey) {\n      throw new Error(\"Magic API Key is not provided.\");\n    }\n    try {\n      if (options.chainId) {\n        this.initializeMagicSDK({\n          chainId: options.chainId\n        });\n      }\n      const provider = await this.getProvider();\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n\n      // Check if there is a user logged in\n      const isAuthenticated = await this.isAuthorized();\n\n      // Check if we have a chainId, in case of error just assign 0 for legacy\n      let chainId;\n      try {\n        chainId = await this.getChainId();\n      } catch (e) {\n        chainId = 0;\n      }\n      _classPrivateFieldSet(this, _connectedChainId, chainId);\n\n      // if there is a user logged in, return the user\n      if (isAuthenticated) {\n        return {\n          provider,\n          chain: {\n            id: chainId,\n            unsupported: false\n          },\n          account: await this.getAccount()\n        };\n      }\n      const magic = this.getMagicSDK();\n      if (_classPrivateFieldGet(this, _type) === \"connect\") {\n        if (\"email\" in options || \"phoneNumber\" in options) {\n          console.warn(\"Passing email or phoneNumber is not required for Magic Connect\");\n        }\n        await magic.wallet.connectWithUI();\n      } else {\n        // LOGIN WITH MAGIC LINK WITH OAUTH PROVIDER\n        if (\"oauthProvider\" in options) {\n          await magic.oauth.loginWithRedirect({\n            provider: options.oauthProvider,\n            redirectURI: this.oauthRedirectURI || window.location.href\n          });\n          await new Promise(res => {\n            // never resolve - to keep the app in \"connecting...\" state until the redirect happens\n            setTimeout(res, 10000); // timeout if takes if redirect doesn't happen for 10 seconds (will likely never happen)\n          });\n        }\n\n        // LOGIN WITH MAGIC LINK WITH EMAIL\n        else if (\"email\" in options) {\n          await magic.auth.loginWithMagicLink({\n            email: options.email,\n            showUI: true\n          });\n        }\n\n        // LOGIN WITH MAGIC LINK WITH PHONE NUMBER\n        else if (\"phoneNumber\" in options) {\n          await magic.auth.loginWithSMS({\n            phoneNumber: options.phoneNumber\n          });\n        }\n\n        // error\n        else {\n          throw new Error(\"Invalid options: Either provide and email, phoneNumber or oauthProvider when using Magic Auth\");\n        }\n      }\n      const signer = await this.getSigner();\n      let account = await signer.getAddress();\n      if (!account.startsWith(\"0x\")) {\n        account = `0x${account}`;\n      }\n      return {\n        account,\n        chain: {\n          id: chainId,\n          unsupported: false\n        },\n        provider\n      };\n\n      // throw new UserRejectedRequestError(\"User rejected request\");\n    } catch (error) {\n      console.error(error);\n      throw new Error(\"Something went wrong\");\n    }\n  }\n  async getChainId() {\n    const networkOptions = this.magicSdkConfiguration?.network;\n    if (typeof networkOptions === \"object\") {\n      const chainID = networkOptions.chainId;\n      if (chainID) {\n        return normalizeChainId(chainID);\n      }\n    }\n    throw new Error(\"Chain ID is not defined\");\n  }\n  initializeMagicSDK() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const options = {\n      ...this.magicSdkConfiguration,\n      extensions: [new OAuthExtension()]\n    };\n    if (chainId) {\n      const chain = this.chains.find(c => c.chainId === chainId);\n      if (chain) {\n        options.network = {\n          rpcUrl: chain.rpc[0] || \"\",\n          // TODO handle empty RPC array\n          chainId: chain.chainId\n        };\n      }\n    }\n    this.magicSDK = new Magic(this.magicOptions.apiKey, options);\n    this.provider = this.magicSDK.rpcProvider;\n    return this.magicSDK;\n  }\n  getMagicSDK() {\n    if (!this.magicSDK) {\n      return this.initializeMagicSDK();\n    }\n    return this.magicSDK;\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", this.onAccountsChanged);\n    provider.on(\"chainChanged\", this.onChainChanged);\n    provider.on(\"disconnect\", this.onDisconnect);\n  }\n  async switchChain(chainId) {\n    const chain = this.chains.find(c => c.chainId === chainId);\n    if (!chain) {\n      throw new Error(\"Chain not found\");\n    }\n    if (_classPrivateFieldGet(this, _connectedChainId) !== chainId) {\n      this.initializeMagicSDK({\n        chainId\n      });\n    }\n    return chain;\n  }\n}\n\nexport { MagicAuthConnector, MagicBaseConnector };\n"],"names":["WagmiConnector","EventEmitter","constructor","_ref","chains","defaultChains","options","super","this","getBlockExplorerUrls","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","isChainUnsupported","chainId","some","updateChains","normalizeChainId","Number","parseInt","trim","substring","MagicBaseConnector","config","_defineProperty","magicOptions","getAccount","signer","ethers","getProvider","getSigner","account","getAddress","startsWith","concat","provider","magic","getMagicSDK","rpcProvider","isAuthorized","user","isLoggedIn","e","onAccountsChanged","accounts","emit","utils","onChainChanged","id","unsupported","onDisconnect","disconnect","logout","_connectedChainId","WeakMap","_type","MagicAuthConnector","_config$options$oauth","_config$options$oauth2","_classPrivateFieldInitSpec","writable","value","magicSdkConfiguration","_classPrivateFieldSet","type","oauthProviders","oauthOptions","providers","oauthRedirectURI","redirectURI","connect","apiKey","Error","initializeMagicSDK","setupListeners","isAuthenticated","getChainId","_classPrivateFieldGet","console","warn","wallet","connectWithUI","oauth","loginWithRedirect","oauthProvider","window","location","href","Promise","res","setTimeout","auth","loginWithMagicLink","email","showUI","loginWithSMS","phoneNumber","error","_this$magicSdkConfigu","networkOptions","network","chainID","arguments","extensions","OAuthExtension","find","c","rpcUrl","rpc","magicSDK","Magic","on","switchChain"],"sourceRoot":""}
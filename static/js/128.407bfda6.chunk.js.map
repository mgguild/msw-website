{"version":3,"file":"static/js/128.407bfda6.chunk.js","mappings":"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","sources":["../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/WagmiConnector-2f14002d.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/errors-9f6736cb.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/normalizeChainId-1fb9aedf.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/dist/url-a45219bd.browser.esm.js","../node_modules/@thirdweb-dev/react-core/node_modules/@thirdweb-dev/wallets/evm/connectors/blocto/dist/thirdweb-dev-wallets-evm-connectors-blocto.browser.esm.js"],"sourcesContent":["import { defaultChains } from '@thirdweb-dev/chains';\nimport EventEmitter from 'eventemitter3';\n\nclass WagmiConnector extends EventEmitter {\n  /** Unique connector id */\n\n  /** Connector name */\n\n  /** Chains connector supports */\n\n  /** Options to use with connector */\n\n  /** Whether connector is usable */\n\n  constructor(_ref) {\n    let {\n      chains = defaultChains,\n      options\n    } = _ref;\n    super();\n    this.chains = chains;\n    this.options = options;\n  }\n  getBlockExplorerUrls(chain) {\n    const explorers = chain.explorers?.map(x => x.url) ?? [];\n    return explorers.length > 0 ? explorers : undefined;\n  }\n  isChainUnsupported(chainId) {\n    return !this.chains.some(x => x.chainId === chainId);\n  }\n  updateChains(chains) {\n    this.chains = chains;\n  }\n}\n\nexport { WagmiConnector as W };\n","import { _ as _defineProperty } from './defineProperty-d7c057bf.browser.esm.js';\n\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors per EIP-1474.\n * @see https://eips.ethereum.org/EIPS/eip-1474\n */\nclass RpcError extends Error {\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string.');\n    }\n    super(`${message}. Cause: ${JSON.stringify(cause)}`);\n    this.cause = cause;\n    this.code = code;\n    this.data = data;\n  }\n}\n\n/**\n * @internal\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * @see https://eips.ethereum.org/EIPS/eip-1193\n */\nclass ProviderRpcError extends RpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   * `code` must be an integer in the `1000 <= 4999` range.\n   */\n  constructor( /** Human-readable string */\n  message, options) {\n    const {\n      cause,\n      code,\n      data\n    } = options;\n    if (!(Number.isInteger(code) && code >= 1000 && code <= 4999)) {\n      throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n    }\n    super(message, {\n      cause,\n      code,\n      data\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass AddChainError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"AddChainError\");\n    _defineProperty(this, \"message\", \"Error adding chain\");\n  }\n}\n\n/**\n * @internal\n */\nclass ChainNotConfiguredError extends Error {\n  constructor(_ref) {\n    let {\n      chainId,\n      connectorId\n    } = _ref;\n    super(`Chain \"${chainId}\" not configured for connector \"${connectorId}\".`);\n    _defineProperty(this, \"name\", \"ChainNotConfigured\");\n  }\n}\nclass ConnectorNotFoundError extends Error {\n  constructor() {\n    super(...arguments);\n    _defineProperty(this, \"name\", \"ConnectorNotFoundError\");\n    _defineProperty(this, \"message\", \"Connector not found\");\n  }\n}\nclass ResourceUnavailableError extends RpcError {\n  constructor(cause) {\n    super(\"Resource unavailable\", {\n      cause,\n      code: -32002\n    });\n    _defineProperty(this, \"name\", \"ResourceUnavailable\");\n  }\n}\n/**\n * @internal\n */\nclass SwitchChainError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"Error switching chain\", {\n      cause,\n      code: 4902\n    });\n    _defineProperty(this, \"name\", \"SwitchChainError\");\n  }\n}\n/**\n * @internal\n */\nclass UserRejectedRequestError extends ProviderRpcError {\n  constructor(cause) {\n    super(\"User rejected request\", {\n      cause,\n      code: 4001\n    });\n    _defineProperty(this, \"name\", \"UserRejectedRequestError\");\n  }\n}\n\n/**\n * @internal\n */\n// Ethers does not have an error type so we can use this for casting\n// https://github.com/ethers-io/ethers.js/blob/main/packages/logger/src.ts/index.ts#L268\n\nexport { AddChainError as A, ChainNotConfiguredError as C, ProviderRpcError as P, ResourceUnavailableError as R, SwitchChainError as S, UserRejectedRequestError as U, ConnectorNotFoundError as a };\n","/**\n * @internal\n */\nfunction normalizeChainId(chainId) {\n  if (typeof chainId === \"string\") {\n    return Number.parseInt(chainId, chainId.trim().substring(0, 2) === \"0x\" ? 16 : 10);\n  }\n  if (typeof chainId === \"bigint\") {\n    return Number(chainId);\n  }\n  return chainId;\n}\n\nexport { normalizeChainId as n };\n","import { getValidChainRPCs } from '@thirdweb-dev/chains';\n\nfunction isTwUrl(url) {\n  const host = new URL(url).hostname;\n  return host.endsWith(\".thirdweb.com\") || host.endsWith(\".thirdweb-dev.com\") || host === \"localhost\" || host === \"0.0.0.0\";\n}\nfunction getValidPublicRPCUrl(chain) {\n  return getValidChainRPCs(chain).map(rpc => {\n    try {\n      const url = new URL(rpc);\n      // remove client id from url\n      if (url.hostname.endsWith(\".thirdweb.com\")) {\n        url.pathname = \"\";\n        url.search = \"\";\n      }\n      return url.toString();\n    } catch (e) {\n      return rpc;\n    }\n  });\n}\n\nexport { getValidPublicRPCUrl as g, isTwUrl as i };\n","import { _ as _classPrivateMethodInitSpec, a as _classPrivateMethodGet } from '../../../../dist/classPrivateMethodGet-ea199cc3.browser.esm.js';\nimport { _ as _classPrivateFieldInitSpec, a as _classPrivateFieldSet, b as _classPrivateFieldGet } from '../../../../dist/classPrivateFieldSet-a5db7c83.browser.esm.js';\nimport { _ as _defineProperty } from '../../../../dist/defineProperty-d7c057bf.browser.esm.js';\nimport { W as WagmiConnector } from '../../../../dist/WagmiConnector-2f14002d.browser.esm.js';\nimport { U as UserRejectedRequestError, a as ConnectorNotFoundError, S as SwitchChainError } from '../../../../dist/errors-9f6736cb.browser.esm.js';\nimport BloctoSDK from '@blocto/sdk';\nimport { utils, providers } from 'ethers';\nimport { w as walletIds } from '../../../../dist/walletIds-8e17ffe6.browser.esm.js';\nimport { g as getValidPublicRPCUrl } from '../../../../dist/url-a45219bd.browser.esm.js';\nimport { n as normalizeChainId } from '../../../../dist/normalizeChainId-1fb9aedf.browser.esm.js';\nimport '@thirdweb-dev/chains';\nimport 'eventemitter3';\n\nvar _provider = /*#__PURE__*/new WeakMap();\nvar _onAccountsChangedBind = /*#__PURE__*/new WeakMap();\nvar _onChainChangedBind = /*#__PURE__*/new WeakMap();\nvar _onDisconnectBind = /*#__PURE__*/new WeakMap();\nvar _isUserRejectedRequestError = /*#__PURE__*/new WeakSet();\nvar _handleConnectReset = /*#__PURE__*/new WeakSet();\nclass BloctoConnector extends WagmiConnector {\n  constructor(_ref) {\n    let {\n      chains,\n      options = {}\n    } = _ref;\n    super({\n      chains,\n      options\n    });\n    _classPrivateMethodInitSpec(this, _handleConnectReset);\n    _classPrivateMethodInitSpec(this, _isUserRejectedRequestError);\n    _defineProperty(this, \"id\", walletIds.blocto);\n    _defineProperty(this, \"name\", \"Blocto\");\n    _defineProperty(this, \"ready\", true);\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onAccountsChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onChainChangedBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _onDisconnectBind, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _onAccountsChangedBind, this.onAccountsChanged.bind(this));\n    _classPrivateFieldSet(this, _onChainChangedBind, this.onChainChanged.bind(this));\n    _classPrivateFieldSet(this, _onDisconnectBind, this.onDisconnect.bind(this));\n  }\n  async connect(config) {\n    try {\n      const provider = await this.getProvider(config);\n      this.setupListeners();\n      this.emit(\"message\", {\n        type: \"connecting\"\n      });\n      const accounts = await provider.request({\n        method: \"eth_requestAccounts\"\n      });\n      const account = utils.getAddress(accounts[0]);\n      const id = await this.getChainId();\n      const unsupported = this.isChainUnsupported(id);\n      return {\n        account,\n        chain: {\n          id,\n          unsupported\n        },\n        provider\n      };\n    } catch (error) {\n      _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw error;\n    }\n  }\n  async disconnect() {\n    const provider = await this.getProvider();\n    await provider.request({\n      method: \"wallet_disconnect\"\n    });\n    this.removeListeners();\n    _classPrivateMethodGet(this, _handleConnectReset, _handleConnectReset2).call(this);\n  }\n  async getAccount() {\n    const provider = await this.getProvider();\n    const accounts = await provider.request({\n      method: \"eth_accounts\"\n    });\n    const [address] = accounts || [];\n    if (!address) {\n      throw new Error(\"No accounts found\");\n    }\n    return address;\n  }\n  async getChainId() {\n    const provider = await this.getProvider();\n    const chainId = await provider.request({\n      method: \"eth_chainId\"\n    });\n    return normalizeChainId(chainId);\n  }\n  getProvider() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!_classPrivateFieldGet(this, _provider)) {\n      const _chainId = chainId ?? this.options.chainId ?? this.chains[0]?.chainId ?? 1;\n      const _rpc = this.chains.find(x => x.chainId === _chainId)?.rpc[0];\n      _classPrivateFieldSet(this, _provider, new BloctoSDK({\n        ethereum: {\n          chainId: _chainId,\n          rpc: _rpc\n        },\n        appId: this.options.appId\n      })?.ethereum);\n    }\n    if (!_classPrivateFieldGet(this, _provider)) {\n      throw new ConnectorNotFoundError();\n    }\n    return Promise.resolve(_classPrivateFieldGet(this, _provider));\n  }\n  async getSigner() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const [provider, account] = await Promise.all([this.getProvider(), this.getAccount()]);\n    return new providers.Web3Provider(provider, chainId).getSigner(account);\n  }\n  async isAuthorized() {\n    return !!_classPrivateFieldGet(this, _provider)?._blocto?.sessionKey ?? false;\n  }\n  async switchChain(chainId) {\n    const provider = await this.getProvider();\n    const id = utils.hexValue(chainId);\n    const chain = this.chains.find(x => x.chainId === chainId);\n    if (!chain) {\n      throw new SwitchChainError(new Error(\"chain not found on connector.\"));\n    }\n    const isBloctoSupportChain = provider._blocto.supportNetworkList[`${chainId}`];\n    if (!isBloctoSupportChain) {\n      throw new SwitchChainError(new Error(`Blocto unsupported chain: ${id}`));\n    }\n    try {\n      await provider.request({\n        method: \"wallet_addEthereumChain\",\n        params: [{\n          chainId: id,\n          rpcUrls: getValidPublicRPCUrl(chain) // no client id on purpose here\n        }]\n      });\n      await provider.request({\n        method: \"wallet_switchEthereumChain\",\n        params: [{\n          chainId: id\n        }]\n      });\n      return chain;\n    } catch (error) {\n      if (_classPrivateMethodGet(this, _isUserRejectedRequestError, _isUserRejectedRequestError2).call(this, error)) {\n        throw new UserRejectedRequestError(error);\n      }\n      throw new SwitchChainError(error);\n    }\n  }\n  onAccountsChanged() {\n    // not supported yet\n  }\n  async onChainChanged(chain) {\n    const id = normalizeChainId(chain);\n    const unsupported = this.isChainUnsupported(id);\n    const account = await this.getAccount();\n    this.emit(\"change\", {\n      chain: {\n        id,\n        unsupported\n      },\n      account\n    });\n  }\n  onDisconnect() {\n    this.emit(\"disconnect\");\n  }\n  async setupListeners() {\n    const provider = await this.getProvider();\n    provider.on(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.on(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.on(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n  async removeListeners() {\n    const provider = await this.getProvider();\n    provider.off(\"accountsChanged\", _classPrivateFieldGet(this, _onAccountsChangedBind));\n    provider.off(\"chainChanged\", _classPrivateFieldGet(this, _onChainChangedBind));\n    provider.off(\"disconnect\", _classPrivateFieldGet(this, _onDisconnectBind));\n  }\n}\nfunction _isUserRejectedRequestError2(error) {\n  return /(user rejected)/i.test(error.message);\n}\nfunction _handleConnectReset2() {\n  _classPrivateFieldSet(this, _provider, undefined);\n}\n\nexport { BloctoConnector };\n"],"names":["WagmiConnector","EventEmitter","constructor","_ref","chains","defaultChains","options","super","this","getBlockExplorerUrls","chain","_chain$explorers$map","_chain$explorers","explorers","map","x","url","length","undefined","isChainUnsupported","chainId","some","updateChains","RpcError","Error","message","cause","code","data","Number","isInteger","concat","JSON","stringify","ProviderRpcError","AddChainError","arguments","_defineProperty","ChainNotConfiguredError","connectorId","ConnectorNotFoundError","ResourceUnavailableError","SwitchChainError","UserRejectedRequestError","normalizeChainId","parseInt","trim","substring","isTwUrl","host","URL","hostname","endsWith","getValidPublicRPCUrl","getValidChainRPCs","rpc","pathname","search","toString","e","_provider","WeakMap","_onAccountsChangedBind","_onChainChangedBind","_onDisconnectBind","_isUserRejectedRequestError","WeakSet","_handleConnectReset","BloctoConnector","_classPrivateMethodInitSpec","walletIds","blocto","_classPrivateFieldInitSpec","writable","value","_classPrivateFieldSet","onAccountsChanged","bind","onChainChanged","onDisconnect","connect","config","provider","getProvider","setupListeners","emit","type","accounts","request","method","account","utils","id","getChainId","unsupported","error","_classPrivateMethodGet","_handleConnectReset2","call","_isUserRejectedRequestError2","disconnect","removeListeners","getAccount","address","_classPrivateFieldGet","_ref2","_ref3","_this$chains$","_this$chains$find","_BloctoSDK","_chainId","_rpc","find","BloctoSDK","ethereum","appId","Promise","resolve","getSigner","all","providers","isAuthorized","_classPrivateFieldGet2","_classPrivateFieldGet3","_blocto","sessionKey","switchChain","supportNetworkList","params","rpcUrls","on","off","test"],"sourceRoot":""}